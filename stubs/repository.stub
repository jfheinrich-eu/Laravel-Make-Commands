<?php declare(strict_types=1);

namespace {{ namespace }}

use Illuminate\Database\Eloquent\Collection;

use {{ namespacedModel }};
use Illuminate\Database\Eloquent\Model;
use JfheinrichEu\LaravelMakeCommands\Dto\RepositoryDto;
use JfheinrichEu\LaravelMakeCommands\Contracts\RepositoryContract;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class {{ class }} implements RepositoryContract
{
    public function __construct(protected {{ model }} ${{ modelVariable }}) {}

    public function all(): Collection
    {
        return $this->{{ modelVariable }}::all();
    }

    /**
     * @inheritdoc
     */
    public function create(RepositoryDto $dto): Model|{{ model }}
    {
        return $this->{{ modelVariable }}::create($dto->attributes->toArray());
    }

    /**
     * @inheritdoc
     */
    public function update(RepositoryDto $dto): bool
    {
        return $this->{{ modelVariable }}->whereId($dto->id)
            ->update($dto->attributes->toArray());
    }

    /**
     * @inheritdoc
     */
    public function delete(int $id): bool
    {
        return $this->{{ modelVariable }}->whereId($id)->delete($id);
    }

    /**
     * @inheritdoc
     */
    public function find(int $id): Model| {{ model }}
    {
        $model = $this->{{ modelVariable }}->find($id)
        if (null == $model)
        {
            throw new ModelNotFoundException("Resource not found");
        }

        return $model;
    }
}
